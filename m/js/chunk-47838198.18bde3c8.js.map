{"version":3,"sources":["webpack:///../../../src/mixins/routable/index.ts","webpack:///../../../src/mixins/measurable/index.ts","webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///../../../src/mixins/groupable/index.ts","webpack:///./node_modules/core-js/modules/es.string.link.js","webpack:///../../../src/mixins/elevatable/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/toggleable/index.ts"],"names":["name","directives","Ripple","props","activeClass","append","disabled","exact","type","default","undefined","exactPath","exactActiveClass","link","href","String","to","nuxt","replace","ripple","Boolean","tag","target","data","isActive","proxyClass","computed","classes","this","computedRipple","isClickable","isLink","$listeners","$attrs","styles","watch","$route","mounted","methods","generateRouteLink","attrs","tabindex","class","style","value","click","Object","path","onRouteChange","$refs","toggle","height","Number","maxHeight","maxWidth","minHeight","minWidth","width","measurableStyles","boilerplate","loading","tile","transition","types","role","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","genBone","$createElement","staticClass","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","render","h","namespace","groupClasses","created","beforeDestroy","factory","$","createHTML","forcedStringHTMLMethod","proto","forced","url","elevation","computedElevation","isNaN","parseInt","active","chipGroup","close","closeIcon","closeLabel","draggable","filter","filterIcon","label","outlined","pill","textColor","hasClose","breakingProps","original","replacement","genFilter","left","genClose","right","size","$vuetify","lang","t","e","genContent","$slots","setBackgroundColor","color","setTextColor","prop","event","model","required","$emit","Toggleable"],"mappings":"oOAQe,2BAAW,CACxBA,KADwB,WAGxBC,WAAY,CACVC,OAAA,QAGFC,MAAO,CACLC,YADK,OAELC,OAFK,QAGLC,SAHK,QAILC,MAAO,CACLC,KADK,QAELC,aAASC,GAEXC,UARK,QASLC,iBATK,OAULC,KAVK,QAWLC,KAAM,CAACC,OAXF,QAYLC,GAAI,CAACD,OAZA,QAaLE,KAbK,QAcLC,QAdK,QAeLC,OAAQ,CACNX,KAAM,CAACY,QADD,QAENX,QAAS,MAEXY,IAnBK,OAoBLC,OAAQP,QAGVQ,KAAM,iBAAO,CACXC,UADW,EAEXC,WAAY,KAGdC,SAAU,CACRC,QADQ,WAEN,IAAMA,EAAN,GAEA,OAAIC,KAAJ,KAEIA,KAAJ,cAAsBD,EAAQC,KAAR,aAA4BA,KAA5B,UAClBA,KAAJ,aAAqBD,EAAQC,KAAR,YAA2BA,KAA3B,WAHDD,GAOtBE,eAXQ,W,MAYN,OAAO,UAAAD,KAAA,cAAW,MAAX,GAAiBA,KAAD,UAAkBA,KAAzC,aAEFE,YAdQ,WAeN,OAAIF,KAAJ,UAEOR,QACLQ,KAAKG,QACLH,KAAKI,WADL,OAEAJ,KAAKI,WAFL,WAGAJ,KAAKK,OAJP,WAOFF,OAxBQ,WAyBN,OAAOH,KAAKZ,IAAMY,KAAX,MAAwBA,KAA/B,MAEFM,OAAQ,sBAGVC,MAAO,CACLC,OAAQ,iBAGVC,QArEwB,WAsEtBT,KAAA,iBAGFU,QAAS,CACPC,kBADO,WACU,MAEf,EADIhC,EAAQqB,KAAZ,MAGML,GAAI,GACRiB,MAAO,CACLC,SAAU,aAAcb,KAAd,OAA4BA,KAAKK,OAAjC,cAAmDvB,GAE/DgC,MAAOd,KAJe,QAKtBe,MAAOf,KALe,OAMtBzB,MANsB,GAOtBF,WAAY,CAAC,CACXD,KADW,SAEX4C,MAAOhB,KAAKC,kBATN,iBAWPD,KAAKZ,GAAK,WAAX,KAXQ,iCAYHY,KAD0B,YAEzB,UAAWA,KAAO,CAAEiB,MAAQjB,KAAaiB,YAFhB,IAXvB,uBAeH,QAfG,GAuBV,GALA,qBAAWjB,KAAP,QACFrB,EAAoB,MAAZqB,KAAKZ,IACVY,KAAKZ,KAAO8B,OAAOlB,KAAnB,KADH,MACkCA,KAAKZ,GAAG+B,MAGxCnB,KAAJ,GAAa,CAGX,IAAIxB,EAAcwB,KAAlB,YACIhB,EAAmBgB,KAAKhB,kBAA5B,EAEIgB,KAAJ,aACExB,EAAc,UAAGA,EAAH,YAAkBwB,KAAlB,YAAd,OACAhB,EAAmB,UAAGA,EAAH,YAAuBgB,KAAvB,YAAnB,QAGFP,EAAMO,KAAKX,KAAO,YAAlB,cACA6B,OAAA,OAAcvB,EAAd,MAA0B,CACxBP,GAAIY,KADoB,GAExBrB,QACAI,UAAWiB,KAHa,UAIxBxB,cACAQ,mBACAP,OAAQuB,KANgB,OAOxBV,QAASU,KAAKV,eAGhBG,GAAOO,KAAKd,KAAN,IAAsBc,KAAtB,MAAN,MAEI,MAAAP,GAAeO,KAAnB,OAA8BL,EAAA,WAAmBK,KAAnB,MAKhC,OAFIA,KAAJ,SAAiBL,EAAA,aAAqBK,KAArB,QAEV,CAAEP,MAAKE,SAEhByB,cA3DO,WA2DM,WACX,GAAKpB,KAAD,IAAaA,KAAKqB,MAAlB,MAAiCrB,KAArC,QACA,IAAMxB,EAAc,UAAGwB,KAAKxB,aAAe,GAAvB,YAA6BwB,KAAKH,YAAlC,IAApB,OACMb,EAAmB,UAAGgB,KAAKhB,kBAAoB,GAA5B,YAAkCgB,KAAKH,YAAvC,YAAzB,EAEMsB,EAAO,sBAAwBnB,KAAKrB,MAAQK,EAAlD,GAEAgB,KAAA,WAAe,YAER,eAAqB,QAAD,KAArB,KAAiD,EAArD,UACE,gBAINsB,OAzEO,WA0ELtB,KAAA,UAAiBA,KAAjB,c,mGCnJS,2BAAW,CACxB5B,KADwB,aAGxBG,MAAO,CACLgD,OAAQ,CAACC,OADJ,QAELC,UAAW,CAACD,OAFP,QAGLE,SAAU,CAACF,OAHN,QAILG,UAAW,CAACH,OAJP,QAKLI,SAAU,CAACJ,OALN,QAMLK,MAAO,CAACL,OAAQrC,SAGlBW,SAAU,CACRgC,iBADQ,WAEN,IAAMxB,EAAN,GAEMiB,EAAS,eAAcvB,KAA7B,QACM2B,EAAY,eAAc3B,KAAhC,WACM4B,EAAW,eAAc5B,KAA/B,UACMyB,EAAY,eAAczB,KAAhC,WACM0B,EAAW,eAAc1B,KAA/B,UACM6B,EAAQ,eAAc7B,KAA5B,OASA,OAPA,IAAYM,EAAA,UACZ,IAAeA,EAAA,aACf,IAAcA,EAAA,YACd,IAAeA,EAAA,aACf,IAAcA,EAAA,YACd,IAAWA,EAAA,SAEX,O,4MCdS,sBAAO,EAAD,YAAN,eAIN,CACPlC,KADO,kBAGPG,MAAO,CACLwD,YADK,QAELC,QAFK,QAGLC,KAHK,QAILC,WAJK,OAKLtD,KALK,OAMLuD,MAAO,CACLvD,KADK,OAELC,QAAS,uBAIbiB,SAAU,CACRc,MADQ,WAEN,OAAKZ,KAAL,UAEQA,KAAD,YAAP,GAAO,gBACL,aADyB,EAEzB,YAFyB,SAGzBoC,KAHyB,SAItBpC,KAAKK,QANkBL,KAAP,QASvBD,QAXQ,WAYN,sCACE,iCAAkCC,KAD7B,YAEL,gCAAiCA,KAF5B,UAGL,0BAA2BA,KAHtB,MAIFA,KAJE,cAKFA,KAAKqC,mBAGZC,UApBQ,WAqBN,QAAS,YAAatC,KAAf,eAAqCA,KAA5C,SAEFuC,UAvBQ,WAwBN,uBACEC,QADK,WAELC,QAFK,qBAGLC,OAHK,SAILC,OAJK,SAKLC,KALK,sBAML,cANK,0BAOL,eAPK,UAQLC,KARK,OASL,cATK,mFAUL,sBAVK,iBAWL,mBAXK,YAYLC,QAZK,UAaLC,MAbK,QAcL,YAdK,OAeL,mBAfK,eAgBL,qBAhBK,YAiBL,4BAjBK,oBAkBL,uBAlBK,YAmBL,8BAnBK,oBAoBLC,UApBK,SAqBLC,UArBK,SAsBLC,MAtBK,uDAuBL,gBAvBK,gBAwBL,cAxBK,YAyBL,cAzBK,sBA0BL,oBA1BK,qBA2BL,YA3BK,eA4BL,aA5BK,OA6BL,cA7BK,mBA8BLC,KA9BK,QA+BFnD,KAAKmC,SAKdzB,QAAS,CACP0C,QADO,SACA,KACL,OAAOpD,KAAKqD,eAAe,MAAO,CAChCC,YAAa,sBAAF,OAAwBH,EAAxB,6BADb,IAIFI,SANO,SAMC,GAAc,aAEGC,EAAA,MAAvB,KAFoB,sBAEd,EAFc,KAEd,EAFc,KAGdC,EAAY,kBAAM,eAHJ,IAOpB,OAAOC,MAAA,KAAW,CAAEC,WAAb,IAAP,IAIFC,aAjBO,SAiBK,GACV,IAAIC,EAAJ,GACAjF,EAAOA,GAAQoB,KAARpB,MAAP,GACA,IAAM4E,EAAOxD,KAAKuC,UAAU3D,IAHH,GAOzB,GAAIA,IAAJ,OAEK,IAAIA,EAAA,cAAJ,EAA4B,OAAOoB,KAAK8D,SAAxC,GAEA,GAAIlF,EAAA,cAAJ,EAA4B,OAAOoB,KAAKuD,SAAxC,GAEIC,EAAA,cAAJ,EAA4BK,EAAW7D,KAAK8D,SAA5C,GAEIN,EAAA,cAAJ,EAA4BK,EAAW7D,KAAKuD,SAA5C,GAEIC,GAAMK,EAAA,KAAc7D,KAAK4D,aAAnB,IAEf,MAAO,CAAC5D,KAAKoD,QAAQxE,EAArB,KAEFmF,YAtCO,WAuCL,IAAMF,EAAN,GAMA,OAJK7D,KAAL,UACK6D,EAAA,KAAc7D,KAAd,gBADgB6D,EAAA,KAAc,eAAnC,OAIK7D,KAAL,WAGOA,KAAKqD,eAAe,aAAc,CACvC9E,MAAO,CACLH,KAAM4B,KAAKkC,YAIb8B,GAAI,CACFC,WAAYjE,KADV,YAEFkE,YAAalE,KAFX,cAGFmE,YAAanE,KAHX,cAIFoE,eAAgBpE,KAAKqE,cAVzB,GAH6BR,GAiB/BC,SA9DO,SA8DC,GAEN,OAAOQ,EAAA,iCAAwCtE,KAA/C,eAEFuE,cAlEO,SAkEM,GACXvE,KAAA,eAEKA,KAAL,YAEAwE,EAAA,cAAmB,CACjBC,QAASD,EAAA,MADQ,QAEjBtC,WAAYsC,EAAA,MAAStC,YAGvBsC,EAAA,qDAEFE,cA9EO,SA8EM,GACXF,EAAA,iDAEFH,YAjFO,SAiFI,GACJG,EAAL,gBAEAA,EAAA,cAAmBA,EAAA,uBAAnB,GACAA,EAAA,iBAAsBA,EAAA,cAAtB,kBAEOA,EAAP,iBAIJG,OAtKO,SAsKD,GACJ,OAAOC,EAAE,MAAO,CACdtB,YADc,oBAEd1C,MAAOZ,KAFO,MAGdgE,GAAIhE,KAHU,WAIdc,MAAOd,KAJO,QAKde,MAAOf,KAAKsC,UAAYtC,KAAjB,sBAAyClB,GAC/C,CAACkB,KANJ,oB,kGCnLE,kBAKJ,OAAO,eAAiB,IAAjB,UAAyD,CAC9D5B,KAD8D,YAG9DG,MAAO,CACLC,YAAa,CACXI,KADW,OAEXC,QAFW,WAGT,GAAKmB,KAAL,GAEA,OAAOA,KAAK6E,GAAZ,cAGJnG,SAAUc,SAGZG,KAf8D,WAgB5D,MAAO,CACLC,UAAU,IAIdE,SAAU,CACRgF,aADQ,WAEN,OAAK9E,KAAL,YAEA,kBACGA,KAAD,YAAoBA,KAAKJ,UAHG,KAQlCmF,QA/B8D,WAgC5D/E,KAAA,IAAoBA,KAAK6E,GAAL,SAApB7E,OAGFgF,cAnC8D,WAoC5DhF,KAAA,IAAoBA,KAAK6E,GAAL,WAApB7E,OAGFU,QAAS,CACPY,OADO,WAELtB,KAAA,oBAOUiF,EAAlB,c,2DCpEA,IAAIC,EAAI,EAAQ,QACZC,EAAa,EAAQ,QACrBC,EAAyB,EAAQ,QAIrCF,EAAE,CAAExF,OAAQ,SAAU2F,OAAO,EAAMC,OAAQF,EAAuB,SAAW,CAC3EnG,KAAM,SAAcsG,GAClB,OAAOJ,EAAWnF,KAAM,IAAK,OAAQuF,O,wECP1B,2BAAW,CACxBnH,KADwB,aAGxBG,MAAO,CACLiH,UAAW,CAAChE,OAAQrC,SAGtBW,SAAU,CACR2F,kBADQ,WAEN,OAAOzF,KAAP,WAEFqC,iBAJQ,WAKN,IAAMmD,EAAYxF,KAAlB,kBAEA,aAAIwF,GACAE,MAAMC,SAAV,IAD8B,GAE9B,sCAAuB3F,KAAd,YAAiC,Q,sNCQjC,sBAAO,EAAD,0BAKnB,eALmB,aAMnB,eANa,sBAON,CACP5B,KADO,SAGPG,MAAO,CACLqH,OAAQ,CACNhH,KADM,QAENC,SAAS,GAEXL,YAAa,CACXI,KADW,OAEXC,QAFW,WAGT,OAAKmB,KAAL,UAEOA,KAAK6F,UAAZ,YAF4B,KAKhCC,MAbK,QAcLC,UAAW,CACTnH,KADS,OAETC,QAAS,WAEXmH,WAAY,CACVpH,KADU,OAEVC,QAAS,kBAEXH,SAtBK,QAuBLuH,UAvBK,QAwBLC,OAxBK,QAyBLC,WAAY,CACVvH,KADU,OAEVC,QAAS,aAEXuH,MA7BK,QA8BLnH,KA9BK,QA+BLoH,SA/BK,QAgCLC,KAhCK,QAiCL7G,IAAK,CACHb,KADG,OAEHC,QAAS,QAEX0H,UArCK,OAsCLvF,MAAO,MAGTrB,KAAM,iBAAO,CACXE,WAAY,mBAGdC,SAAU,CACRC,QADQ,WAEN,oEACE,UADK,GAEF,qCAFE,OAAP,IAGE,oBAAqBC,KAHhB,YAIL,mBAAoBA,KAJf,SAKL,oBAAqBA,KALhB,UAML,gBAAiBA,KANZ,MAOL,eAAgBA,KAPX,OAQL,oBAAqBA,KARhB,MASL,mBAAoBA,KATf,SAUL,eAAgBA,KAVX,KAWL,oBAAqBA,KAXhB,UAYFA,KAZE,cAaFA,KAbE,iBAcFA,KAAK8E,eAGZ0B,SAnBQ,WAoBN,OAAOhH,QAAQQ,KAAf,QAEFE,YAtBQ,WAuBN,OAAOV,QACL,gDACAQ,KAFF,aAOJ+E,QA9EO,WA8EA,WACC0B,EAAgB,CACpB,CAAC,UADmB,YAEpB,CAAC,WAFmB,eAGpB,CAAC,QAHmB,UAIpB,CAAC,SAJH,iBAQAA,EAAA,SAAsB,YAA4B,0BAA3B,EAA2B,KAA5B,EAA4B,KAC5C,wBAAJ,IAA0C,eAASC,EAAUC,EAAnB,OAI9CjG,QAAS,CACPO,MADO,SACF,GACHjB,KAAA,iBAEAA,KAAA,WAAkBA,KAAlB,UAEF4G,UANO,WAOL,IAAM/C,EAAN,GAWA,OATI7D,KAAJ,UACE6D,EAAA,KACE7D,KAAKqD,eAAe,EAApB,KAA2B,CACzBC,YADyB,iBAEzB/E,MAAO,CAAEsI,MAAM,IACd7G,KAJL,aAQKA,KAAKqD,eAAe,EAApB,KAAP,IAEFyD,SApBO,WAoBC,WACN,OAAO9G,KAAKqD,eAAe,EAApB,KAA2B,CAChCC,YADgC,gBAEhC/E,MAAO,CACLwI,OADK,EAELC,KAAM,IAERpG,MAAO,CACL,aAAcZ,KAAKiH,SAASC,KAAKC,EAAEnH,KAArB,aAEhBgE,GAAI,CACF/C,MAAQ,SAAAmG,GACNA,EAAA,kBACAA,EAAA,iBAEA,uBACA,+BAGHpH,KAlBH,YAoBFqH,WAzCO,WA0CL,OAAOrH,KAAKqD,eAAe,OAAQ,CACjCC,YAAa,mBACZ,CACDtD,KAAKkG,QAAUlG,KADd,YAEDA,KAAKsH,OAFJ,QAGDtH,KAAKwG,UAAYxG,KALnB,eAUJ2E,OAhJO,SAgJD,GACJ,IAAMd,EAAW,CAAC7D,KAAlB,cADO,EAEaA,KAApB,oBAAI,EAFG,EAEH,IAAOL,EAFJ,EAEIA,KAEXA,EAAA,uCACKA,EADQ,OAAb,IAEEsG,UAAWjG,KAAKiG,UAAY,YAFjB,EAGXpF,SAAUb,KAAK6F,YAAc7F,KAAnB,WAAuCL,EAAA,MAAYkB,WAE/DlB,EAAA,gBAAsB,CACpBvB,KADoB,OAEpB4C,MAAOhB,KAAK4F,SAEdjG,EAAOK,KAAKuH,mBAAmBvH,KAAxB,MAAPL,GAEA,IAAM6H,EAAQxH,KAAKuG,WAAcvG,KAAKqG,UAAYrG,KAAlD,MAEA,OAAO4E,EAAEnF,EAAKO,KAAKyH,aAAaD,EAAxB,GAAR,O,gGC7LE,aAAkD,MAA/BE,EAA+B,uDAAlD,QAAmCC,EAAe,uDAAlD,QACJ,OAAO,oBAAW,CAChBvJ,KADgB,aAGhBwJ,MAAO,CAAEF,OAAMC,SAEfpJ,MAAO,kBACL,EAAQ,CAAEsJ,UAAU,IAGtBlI,KATgB,WAUd,MAAO,CACLC,WAAYI,KAAK0H,KAIrBnH,OAAK,sBACH,GADG,SACH,GACEP,KAAA,gBAFC,sCAIK,KACN,IAAUA,KAAV,IAAwBA,KAAK8H,MAAMH,EAAnC,MALC,KAYT,IAAMI,EAAa9C,IAEnB","file":"m/js/chunk-47838198.18bde3c8.js","sourcesContent":["import Vue, { VNodeData, PropType } from 'vue'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean as PropType<boolean | undefined>,\n      default: undefined,\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple ?? (!this.disabled && this.isClickable)\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          ...('click' in this ? { click: (this as any).click } : undefined), // #14447\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass || ''} ${this.proxyClass || ''}`.trim()\n      const exactActiveClass = `${this.exactActiveClass || ''} ${this.proxyClass || ''}`.trim() || activeClass\n\n      const path = '_vnode.data.class.' + (this.exact ? exactActiveClass : activeClass)\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (!getObjectValueByPath(this.$refs.link, path) === this.isActive) {\n          this.toggle()\n        }\n      })\n    },\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n})\n","// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}